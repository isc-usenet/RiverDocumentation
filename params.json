{"name":"River","tagline":"Introduction","body":"### What is River?\r\nRiver is a new file format that allows streamable, seekable media files to be played from Usenet. It is designed to be backwards-compatible with NZB files, automatically error-correcting with parity data, and with little overhead.\r\n\r\n### Why should I use River?\r\nImagine being able to watch videos the very moment you click \"download\", instead of waiting to download the entire media file. River is backwards compatible with NZB, but builds on it to allow the ability to correct partial data using PAR2, thus allowing River's capabilities of streaming and seeking to take advantage of the increased data integrity of PAR2. In short, there is no reason to use NZB over River, but using River instead of NZB allows downloaders to stream the content if desired.\r\n\r\n### What is a River Link?\r\nRiver Links are similar to Torrent magnet links in which a small link can be used to gather the contents of a Torrent file. River Links can be used to grab River files directly off Usenet with a short link, such as *river:1340208221.345433@riverup* (Big Buck Bunny 480p h264, CC licensed). This makes it very easy to send gigabytes of content to friends with links that are less than 50 characters long.\r\n\r\n### How do I download and stream River files? Do they work in SABnzbd+?\r\nRiver files will not work directly in SABnzbd+, however by using the River2NZB utility included with Upstream, you can create SABnzbd+ compatible NZB files that can then be fully downloaded and verified. This, however, means you do not have any streaming or seeking capabilities. If you want the full potential of Rivers, download the WebRiver tool. It will allow you to play media in any media player that can stream via HTTP (This includes VLC, mplayer, Media Player Classic, XBMC, MX Video Player) as well as monitor streams and bandwidth.\r\n\r\n### What is WebRiver?\r\nWebRiver is a tool used to stream and play media files from Usenet. It achieves this by allowing media players to stream from it via HTTP. These media players can also seek to any point in the media file and start streaming from that point.\r\n\r\n**[Now you know the basics of River files, click here to learn how to use WebRiver](http://isc-usenet.github.com/WebRiver/)**\r\n<br />\r\n<br />\r\n<br />\r\n\r\n### How do I upload River files? Can I use any NZB uploading tool?\r\nUnfortunately, no. The River format differs too much to be uploadable by any NZB program. While River files may be backward-compatible, they are not forward-compatible, meaning you can convert a River file into an NZB file but not vice versa, and therefore you cannot use an NZB uploader. Currently the only River-compatible uploader is Upstream.\r\n\r\n\r\n### Why should I upload River files instead of NZB files? What benefit do River files have?\r\nThere is no harm uploading river files, as all files uploaded by River can be converted into NZB files and used with an NZB-compatible downloading tool. SABnzbd+ is the most cited example, however any downloader that can handle split files and par2 files can download the content inside a River file. In addition to this NZB converter, the native River file allows media that can be seeked to any point in the file, streamed, and (if needed) recovered on-the-fly without the media player even knowing anything happened.\r\n\r\n### Do I need to use RAR files within River?\r\nNo, and in fact RAR files within Rivers are highly discouraged. RARs are typically uncompressed and serve no purpose other than to split files. Not only does Upstream handle all of the splitting and recovery for you, most media players won't stream RAR files at all. They're simply not needed in River, and create too much of a hassle for both uploaders and downloaders. This is even true in SABnzbd+, where disk IO is through the roof due to unrar. This is not the case for River, as a download does not need to be unpacked in any way - it is unpacked on-the-fly.\r\n\r\n### What is Upstream?\r\nUpstream is a command line River file uploader that can also create River Links (or RLinks). It automatically handles the splitting and par creation, and does so in a way that the data stored in Usenet can be successfully downloaded from an NZB-compatible downloading tool, such as SABnzbd+, after river2nzb conversion. The command line interface is not very intuitive, however it is made more for a graphical tool to configure the settings for upload.\r\n\r\n**[Now you know the basics of uploading, click here to learn how to use Upstream](http://isc-usenet.github.com/Upstream/)**\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}